1.找到一个文件目录，或者某一个地方，在Git Bash 里执行git init 或git init xxx(文件目录) 创建一个git 仓库并初始化
该文件目录就是仓库//Git 只在仓库的根目录生成 .git 目录）

2.git add xxx.xx 提交文件到缓冲区/并被git管理

3.git commit -m "xxx" 提交缓冲区的文件到仓库中 /每次提交文件到仓库都要执行这条语句

4.查看提交到仓库中的文件 git ls-files  //查看未添加的文件 git stauts

…or create a new repository on the command line

…or create a new repository on the command line

5.//Https
echo "# Demo_3" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/quansirx/Demo_3.git
git push -u origin master

…or push an existing repository from the command line

git remote add origin https://github.com/quansirx/Demo_3.git
git push -u origin master

6.//SSH需要配置密钥 方法 https://blog.csdn.net/u013778905/article/details/83501204
echo "# Demo_2" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin git@github.com:quansirx/Demo_2.git
git push -u origin master

…or push an existing repository from the command line

git remote add origin git@github.com:quansirx/Demo_2.git
git push -u origin master

7.把本地文件目录/项目上传到github//https

进入该文件目录
git init
git add 文件目录  ??添加要上传的内容文件或文件夹??
4.查看提交到仓库中的文件 git ls-files  //查看未添加的文件 git stauts
git commit -m "xxxx"
git remote add origin https://github.com/quansirx/Demo_3.git
输入github账号密码
git push -u origin master

8.下载服务端的仓库

git clone https://github.com/quansirx/Demo_3.git




*g@iroogoo.com
0

1、最新git源码下载地址：

https://github.com/git/git/releases

https://www.kernel.org/pub/software/scm/git/

可以手动下载下来在上传到服务器上面

2 移除旧版本git

centos自带Git，7.x版本自带git 1.8.3.1（应该是，也可能不是）， 安装新版本之前需要使用yum remove git卸载（安装后卸载也可以）。

[root@Git ~]# git --version    ## 查看自带的版本
git version 1.8.3.1
[root@Git ~]# yum remove git   ## 移除原来的版本

3 安装所需软件包

[root@Git ~]# yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel 
[root@Git ~]# yum install gcc-c++ perl-ExtUtils-MakeMaker

下载&安装

[root@Git ~]# cd /usr/src
[root@Git ~]# wget https://www.kernel.org/pub/software/scm/git/git-2.7.3.tar.gz

5 解压

[root@Git ~]# tar xf git-2.7.3.tar.gz

6 配置编译安装

[root@Git ~]# cd git-2.7.3
[root@Git ~]# make configure
[root@Git ~]# ./configure --prefix=/usr/git ##配置目录
[root@Git ~]# make profix=/usr/git
[root@Git ~]# make install

7 加入环境变量

[root@Git ~]# echo "export PATH=$PATH:/usr/git/bin" >> /etc/profile
[root@Git ~]# source /etc/profile

8 检查版本

[root@Git git-2.7.3]# git --version 
git version 2.7.3

宋某人c

   宋某人c

  sya***g@iroogoo.com
2年前 (2017-03-23)



…or create a new repository on the command line
echo "# mynote" >> README.md
                  git init
                  git add README.md
                  git commit -m "first commit"
                  git remote add origin https://github.com/quansirx/mynote.git
                  git push -u origin master
                
…or push an existing repository from the command line
git remote add origin https://github.com/quansirx/mynote.git
git push -u origin master



…or import code from another repository
You can initialize this repository with code from a Subversion, Mercurial, or TFS project.

创建本地分支 git branch branch01
切换到新分支 git checkout branch01
切换到主分支 git checkout master
将新分支推送到GitHub git push origin branch01

显示远程分支git branch -r
显示本地分支git branch
显示本地和远程的分支git branch -a
删除本地分支 git branch -d branch01 
git branch -D branch01 


本地误删文件处理
假如你操作失误（当然，这最好永远不要发生），你可以使用如下命令替换掉本地改动：
git checkout -- <filename>
此命令会使用 HEAD 中的最新内容替换掉你的工作目录中的文件。已添加到暂存区的改动以及新文件都不会受到影响。

假如你想丢弃你在本地的所有改动与提交，可以到服务器上获取最新的版本历史，并将你本地主分支指向它：
git fetch origin
git reset --hard origin/master

实际操作:
git fetch origin
git reset --hard origin/branch01


